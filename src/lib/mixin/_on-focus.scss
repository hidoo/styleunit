////
/// (c) hidoo | MIT License
/// @group features
////

@use "sass:list";
@use "sass:meta";
@use "./on" as mixin;
@use "../../settings";

/// Default selectors
/// @access private
/// @type List
///
$_default-selectors: (":hover", ":focus") !default;

/// Utility for pseudo classes like `:hover` and `:focus`
/// @param {List} $additional-selectors [()] - list of additional selectors
/// @param {List} $capturing-selectors [()] - capturing parent selectors
///
/// @example scss - scss inputs
///   .selector {
///     @include mixin.on-focus() {
///       font-size: 16px;
///     }
///   }
///
/// @example css - css outputs
///   .selector:where(:hover, :focus, .is-focus) {
///     font-size: 16px;
///   }
///
@mixin on-focus($additional-selectors: (), $capturing-selectors: ()) {
  $selectors: $_default-selectors;

  @if meta.type-of(settings.$selector-focus) == "list" {
    $selectors: list.join(
      $selectors,
      settings.$selector-focus,
      $separator: comma
    );
  }

  @if meta.type-of($additional-selectors) == "list" {
    $selectors: list.join($selectors, $additional-selectors, $separator: comma);
  }

  @include mixin.on(
    $selectors: $selectors,
    $capturing-selectors: $capturing-selectors
  ) {
    @content;
  }
}
