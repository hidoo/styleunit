@use "sass:meta";
@use "sass:list";
@use "sass:selector";
@use "../lib/function";
@use "../lib/mixin";
@use "../settings";

/*
Height

The height module.

Weight: -97

Style guide: #{settings.$util-prefix}.height
*/

/*
Modifiers

The height modifiers.
Sizes: #{meta.inspect(settings.$util-height)}.

Weight: -100

Markup: <div class="height-example {{modifier_class}}"></div>
<style>
  :where(.height-example) {
    position: relative;
    width: 50px;
    height: 50px;
    background: #999;
    transition: height 0.2s ease-in-out;
  }
</style>

#{settings.$util-prefix}--height-0 - 0px height
#{settings.$util-prefix}--height-min-0 - 0px min height
#{settings.$util-prefix}--height-max-0 - 0px max height
#{settings.$util-prefix}--height-1000 - 1000px height
#{settings.$util-prefix}--height-min-1000 - 1000px min height
#{settings.$util-prefix}--height-max-1000 - 1000px max height
#{settings.$util-prefix}--height-normal - Normal height
#{settings.$util-prefix}--height-min-normal - Normal min height
#{settings.$util-prefix}--height-max-normal - Normal max height
#{settings.$util-prefix}--height-fit - 100% height
#{settings.$util-prefix}--height-min-fit - 100% min height
#{settings.$util-prefix}--height-max-fit - 100% max height
#{settings.$util-prefix}--height-auto - auto height
#{settings.$util-prefix}--height-min-none - None min height.
#{settings.$util-prefix}--height-max-none - None max height.
sm:#{settings.$util-prefix}--height-0 - 0px height if viewport is `"sm"`.
.not-sm:#{settings.$util-prefix}--height-0 - 0px height if viewport is not `"sm"`.

Style guide: #{settings.$util-prefix}.height.builtin
*/
.#{settings.$util-prefix}--height {
  $heights: list.join(settings.$util-height, ("fit", "auto", "none"));

  @each $height in $heights {
    $minmax: ("", "min-", "max-");
    $name: "";

    // stylelint-disable scss/no-duplicate-dollar-variables
    @if meta.type-of($height) == "list" {
      $name: list.nth($height, 1);
      $height: list.nth($height, 2);
    } @else if $height == "fit" {
      $name: $height;
      $height: 100%;
    } @else if $height == "auto" {
      $minmax: ("");
      $name: $height;
    } @else if $height == "none" {
      $minmax: ("min-", "max-");
      $name: $height;
    } @else {
      $name: function.math-remove-unit($height);
    }
    // stylelint-enable scss/no-duplicate-dollar-variables

    @each $pfx in $minmax {
      &-#{$pfx}#{$name} {
        --#{$pfx}height: #{$height};

        #{$pfx}height: var(--#{$pfx}height);
      }

      @each $bp, $query in settings.$breakpoints {
        @if meta.type-of($query) == "string" {
          $selector: selector.replace(
            #{&},
            #{&},
            ".#{$bp}\\:#{settings.$util-prefix}--height"
          );

          @at-root {
            #{$selector}-#{$pfx}#{$name} {
              @include mixin.media($query: $query) {
                --#{$pfx}height: #{$height};

                #{$pfx}height: var(--#{$pfx}height);
              }
            }
          }
        }
      }
    }
  }
}
